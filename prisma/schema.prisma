// Docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------------------------------- Enums --------------------------------- */

enum Role {
  user
  admin
}

enum AuthProviderType {
  google
  facebook
}

enum DataProviderType {
  instagram
}

// --------------------------------  Models ------------------------------- */

model User {
  id                 String              @id @unique
  name               String
  email              String?             @unique
  emailVerified      Boolean             @default(false)
  password           String?
  dateCreated        DateTime            @default(now())
  role               Role                @default(user)
  profileImage       String?
  authProviders      AuthProvider[]
  EmailVerification  EmailVerification?
  PasswordResetToken PasswordResetToken?
  PopupWidget        PopupWidget[]
}

model EmailVerification {
  userId     String   @id @unique
  code       Int
  expiration DateTime
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  userId     String   @id @unique
  token      String   @unique @db.Uuid
  expiration DateTime
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AuthProvider {
  id        String           @id @unique
  provider  AuthProviderType
  userId    String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  User      User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PopupWidget {
  id             String        @id @unique
  userId         String
  dataProviderId String?
  apiKey         String        @unique
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  User           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  domain         String[]
  pages          String[]
  Options        Json
  DataProvider   DataProvider?
}

model DataProvider {
  popupWidgetId String           @id @unique
  accessToken   String
  refreshToken  String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  type          DataProviderType
  data          Json
  PopupWidget   PopupWidget      @relation(fields: [popupWidgetId], references: [id], onDelete: Cascade)
}
